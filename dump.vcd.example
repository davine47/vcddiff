$version Generated by VerilatedVcd $end
$timescale 1ps $end

 $scope module top $end
  $var wire  8 # a_0 [7:0] $end
  $var wire  8 $ a_1 [7:0] $end
  $var wire  8 % a_2 [7:0] $end
  $var wire  8 & a_3 [7:0] $end
  $var wire  8 ' a_4 [7:0] $end
  $var wire  8 ( a_5 [7:0] $end
  $var wire  8 ) a_6 [7:0] $end
  $var wire  8 * a_7 [7:0] $end
  $var wire  8 , b [7:0] $end
  $var wire  8 + mask [7:0] $end
  $scope module MyPlay $end
   $var wire  8 - a_0 [7:0] $end
   $var wire  8 . a_1 [7:0] $end
   $var wire  8 / a_2 [7:0] $end
   $var wire  8 0 a_3 [7:0] $end
   $var wire  8 1 a_4 [7:0] $end
   $var wire  8 2 a_5 [7:0] $end
   $var wire  8 3 a_6 [7:0] $end
   $var wire  8 4 a_7 [7:0] $end
   $var wire  8 6 b [7:0] $end
   $var wire  8 5 mask [7:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000 #
b00000001 $
b00000010 %
b00000011 &
b00000100 '
b00000101 (
b00000110 )
b00000111 *
b11100000 +
b00000101 ,
b00000000 -
b00000001 .
b00000010 /
b00000011 0
b00000100 1
b00000101 2
b00000110 3
b00000111 4
b11100000 5
b00000101 6
#2000
b00000001 +
b00000000 ,
b00000001 5
b00000000 6
#4000
b10010110 +
b00000001 ,
b10010110 5
b00000001 6
#6000
b00000000 +
b00000111 ,
b00000000 5
b00000111 6
#8000
b11111111 +
b00000000 ,
b11111111 5
b00000000 6
#10000
#10001
